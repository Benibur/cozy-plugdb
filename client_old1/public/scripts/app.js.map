{"version":3,"sources":["app/application.js","app/collections/plugs.js","app/initialize.js","app/lib/view_helper.js","app/models/plug.js","app/router.js","app/views/home_view.js","app/views/templates/home.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA","file":"public/scripts/app.js","sourcesContent":["module.exports = {  \n  initialize: function () {\n    var Router = require('router');\n    this.router = new Router();\n    Backbone.history.start();\n    }\n};\n\n","Plug = require('../models/plug');\nmodule.exports = Plugs = Backbone.Collection.extend({\n    model: Plug\n});\n","// The function called from index.html\n$(document).ready(function() {\n    var app = require('application');\n    app.initialize()\n});\n\n","// Put your handlebars.js helpers here.\n","// Base class for all models.\nmodule.exports = Plug = Backbone.Model.extend({\n\n});\n\n","var AppView = require('views/home_view');\nvar PlugCollection = require('collections/plugs');\n\nvar plugs = require('collections/plugs');\n\nmodule.exports = Backbone.Router.extend({\n    routes: {\n      \"\": \"main\",\n      \"init\": \"init\",\n      \"close\": \"close\",\n      \"insert\": \"insert\",\n      \"select\": \"select\",\n      \"replicate\": \"replicate\"    \n    },\n\n    main: function() {\n      var mainView = new AppView({\n        collection: plugs\n      });\n      mainView.render();\n    },\n\n    init: function () {\n        //$('body').html(application.homeView.render().el);\n    }, \n\n    close: function () {\n    },\n\n    insert: function () {\n    },\n\n    select: function () {\n    },\n\n    replicate: function () {\n    },\n\n});\n\n","//var View = require('./view');\n//var Plug = require('../models/plug');\n\nmodule.exports = AppView = Backbone.View.extend({\n\tel: 'body',\n\ttemplate: require('./templates/home'),\n\tevents: {\n\t    \"click #initPlug\": \"init\",\n\t    \"click #closePlug\": \"close\",\n\t    \"click #insert\": \"insert\",\n\t    \"click #replicate\": \"replicate\"\n\t},\n/*\n\tinit: function () {\n        //$('body').html(application.homeView.render().el);\n        //alert('test');\n\t}, \n\n\tclose: function () {\n\t},\n\n\tinsert: function (event) {\n\n\t},\n\n\tselect: function () {\n\t},\n\n\tshare: function () {\n\t}, \n\t// initialize is automatically called once after the view is constructed\n\t/*initialize: function() {\n\t    this.listenTo(this.collection, \"add\", this.onBookmarkAdded);\n\t},\n\t/*onInsertPlug: function(model) {\n\t    // re-render the view\n\t    this.render();\n\t},*/\n\trender: function() {\n        this.$el.html(this.template({\n            plugs: this.collection.toJSON()\n        }));\n\n        return this;\n    }\n});\n\n\n\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<h1>Plug app</h1><p>Status PlugDB :<strong id=\"status\">' + escape((interp = status) == null ? '' : interp) + '</strong></p><hr/><button id=\"initPlug\">Start PlugDB</button><button id=\"closePlug\">Close PlugDB</button><br/><br/><!--form(action=\"insert\",method=\"post\",name=\"insert\")<p>Generate n Contacts and insert the ids in PlugDB :</p><input type=\"text\" name=\"nDocs\" size=\"5\"/><input id=\"insertDocs\" type=\"submit\" value=\"Generate\"/>--><p>Share all my contacts ! <a href=\"replicate\"><img src=\"./images/share.jpg\" height=\"60\" width=\"60\"/></a></p><ul></ul><li> <a href=\"https://github.com/Gara64/cozy-plugdb\">Github</a></li>');\n}\nreturn buf.join(\"\");\n};"]}