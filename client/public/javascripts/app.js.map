{"version":3,"sources":["app/application.js","app/initialize.js","app/lib/view_helper.js","app/models/collection.js","app/models/model.js","app/router.js","app/views/home_view.js","app/views/plug.js","app/views/plug_view.js","app/views/templates/home.jade","app/views/view.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;ACAA;AAAA;AACA;AADA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["// Application bootstrapper.\nvar Application = {\n  initialize: function () {\n    var HomeView = require('views/home_view'), Router = require('router');\n    // Ideally, initialized classes should be kept in controllers & mediator.\n    // If you're making big webapp, here's more sophisticated skeleton\n    // https://github.com/paulmillr/brunch-with-chaplin\n    this.homeView = new HomeView();\n    this.router = new Router();\n    if (typeof Object.freeze === 'function') {\n      Object.freeze(this);\n    }\n  }\n};\n\nmodule.exports = Application;\n","var application = require('application');\n\n$(function () {\n  application.initialize();\n  Backbone.history.start();\n});\n","// Put your handlebars.js helpers here.\n","// Base class for all collections.\nmodule.exports = Backbone.Collection.extend({\n});\n","// Base class for all models.\nmodule.exports = Backbone.Model.extend({\n});\n","var application = require('application');\n\nmodule.exports = Backbone.Router.extend({\n    routes: {\n      \"\": \"main\",\n      \"init\": \"init\",\n      \"close\": \"close\",\n      \"insert/:ndocs\": \"insert\",\n      \"select\": \"select\",\n      \"replicate\": \"replicate\"    \n    },\n\n    main: function() {\n        $('body').html(application.homeView.render().el);\n    },\n\n    init: function () {\n        //$('body').html(application.homeView.render().el);\n    }, \n\n    close: function () {\n    },\n\n    insert: function () {\n    },\n\n    select: function () {\n    },\n\n    replicate: function () {\n    }\n\n});\n\n","var View = require('./view');\nvar template = require('./templates/home');\n\nmodule.exports = View.extend({\n\ttemplate: require('./templates/home'),\n\tevents: {\n\t    \"click #initPlug\": \"init\",\n\t    \"click #closePlug\": \"close\",\n\t    \"click #insert\": \"insert\",\n\t    \"click #replicate\": \"replicate\"\n\t},\n\n\tinit: function () {\n        //$('body').html(application.homeView.render().el);\n        //alert('test');\n\t}, \n\n\tclose: function () {\n\t},\n\n\tinsert: function () {\n\t},\n\n\tselect: function () {\n\t},\n\n\tshare: function () {\n\t}\n});\n\n\n\n","// apps/views/plug.js\n\nmodule.exports = PlugView = Backbone.View.extend({\n  /*el: 'body',\n  render: function() {\n    $(this.el).html(this.template);\n    return $(this.el);\n  },*/\n\n  id: 'plug-view',\n\n\ntemplate: require('./templates/home'),\nevents: {\n    \"click #initPlug\": \"init\",\n    \"click #closePlug\": \"close\",\n    \"click #insert\": \"insert\",\n    \"click #replicate\": \"replicate\"\n},\n\ninit: function () {\n        //$('body').html(application.homeView.render().el);\n        alert('test');\n    }, \n\nclose: function () {\n},\n\ninsert: function () {\n},\n\nselect: function () {\n},\n\nshare: function () {\n}\n});\n\n\n","// apps/views/plug.js\n\nvar View = Backbone.View.extend({\n  el: 'body',\n  render: function() {\n    $(this.el).html(this.template);\n    return $(this.el);\n  },\n\n\ntemplate: require('./templates/home'),\nevents: {\n    \"click #initPlug\": \"init\",\n    \"click #closePlug\": \"close\",\n    \"click #insert\": \"insert\",\n    \"click #replicate\": \"replicate\"\n},\n\ninit: function () {\n        //$('body').html(application.homeView.render().el);\n        alert('test');\n    }, \n\nclose: function () {\n},\n\ninsert: function () {\n},\n\nselect: function () {\n},\n\nshare: function () {\n}\n});\n\n\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"content\"><h1>Plug app</h1><p>Status PlugDB :<strong id=\"status\">' + escape((interp = status) == null ? '' : interp) + '</strong></p><hr/><button id=\"initPlug\">Start PlugDB</button><button id=\"closePlug\">Close PlugDB</button><br/><br/><form action=\"insert\" method=\"post\" name=\"insert\"><p>Generate n Contacts and insert the ids in PlugDB :</p><input type=\"text\" id=\"nDocs\" size=\"5\"/><input type=\"submit\" value=\"Generate\"/></form><p>Share all my contacts ! <a href=\"replicate\"></a><img src=\"./images/share.jpg\" height=\"60\" width=\"60\"/></p><ul></ul><li> <a href=\"https://github.com/Gara64/cozy-plugdb\">Github</a></li></div>');\n}\nreturn buf.join(\"\");\n};","require('lib/view_helper');\n\n// Base class for all views.\nmodule.exports = Backbone.View.extend({\n  initialize: function () {\n    this.render = _.bind(this.render, this);\n  },\n\n  template: function () { return null; },\n  getRenderData: function () { return null; },\n\n  render: function () {\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  },\n\n  afterRender: function () { return null; }\n});\n"]}